salvare la chiave rsa in un file 

#Installare docker
https://docs.docker.com/install/linux/docker-ce/ubuntu/

# Immagine maven
https://hub.docker.com/_/maven/

# Scaricare immagine da docker hub
$ docker pull <immagine>

# Immagini presenti sul nostro sistema
$ docker images

# Dettagli immmagine
$ docker inspect <image>

# Rimuovere immagine scaricata
$ docker rmi <image>
$ docker rm <image_id>

# Creare container da immmagine (se non esiste localmente la scarica in automatico da hub)
$ docker run <image> [COMMAND]
$ docker run --rm <image> :: elimina il container una volta terminato
$ docker run <image> -it :: esegue container con sessione attiva
$ docker run --name <image> :: avvia container assegnandoli un nome ad-hoc
$ docker run -d <image> :: avvia container in background (non blocca sessione corrente)
$ docker run -P <image> :: pubblica tutte le porte esposte dal container associandole a porte RANDOM del sistema host
$ dokcer run -p <porta_locale>:<porta_container> <image> :: avvia il conteiner mappando una porta del sistema host ad una porta del container
e.g. $ docker run -p 8888:80 <image>

# Fermare container
$ docker stop <container>

# Avviare container
$ docker start <container>


# Lista container (default mostra solo container attivi)
$ docker ps 
> -a : tutte i container (anche spenti)
> -q : solo id container
> -f : filtra in base a regole

# Eliminare container
docker container rm <id container>
docker rm <container_id>
docker rm $(docker ps -aqf status=exited) :: rimuove tutti i container terminati
docker container prune :: stesso effetto del comando precednete

# Cronologia di un'immagine (container?)
$ docker history <image>

# Lista porte esposte da container
$ docker port <container>

## Creare immagine da file docker (Dockerfile)
docker build -t img_run-env <path>
OPTIONS:
-t <nome_tag> : tag (nome) da assegnare all'immagine che si costruisce

## Eseguire comando su container
docker exec -itd cont_run-env bash
!!! ATTENZIOEN, su Windows la console interattiva Ã¨ eseguibile solo da Powershell, GitBash genera messaggio di errore the input device is not a TTY.  If you are using mintty, try prefixing the command with 'winpty'


##Creare volumi
docker volume create <nome_volume>
docker run -d --volume <nome_volume> <immagine>


# Lista volumi
docker volume ls

# Copiare file da container a host
$ docker cp <containerId>:/file/path/within/container /host/path/target

# Copiare file da host a container
$ docker cp /host/path/target <containerId>:/file/path/within/container 
