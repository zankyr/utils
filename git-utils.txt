# show remote
$ git remote show origin

# history di git
$ git log

# history sul singolo file
$ git log <file/path>

# history dettagliata (con modifiche effettuate)
$ git log -p 


$ git reset --soft HEAD^ 
$ git reset HEAD path/to/unwanted_file
$ git commit -c ORIG_HEAD  

# List branches
$ git branch # show local branches
$ git branch -a # show local and remote branches
$ git branch -r # show remote branches
$ git branch --list 'SSO*' # list all branches whose name starts with 'SSO'

# Remove branch
git branch -D $(git branch --list 'SSO-*') # remove all branches starting with 'SSO-'

# Sincronizzare branch remota con locale
git branch --set-upstream-to=origin/master
git pull --allow-unrelated-histories
 
# Reset file (not yet staged)
git checkout -- <file> // ALL CHANGES WILL BE DISCARDED

# Restore file from another branch
git restore --source develop -- ../ita-sso-resky-webapp/src/main/java/com/ntt/web/tokentocookie/GetTknServlet.java

# Unstage file
git reset HEAD <file>

# Remove staged file
git rm --cached <file>

# Fixing untracked files
git rm -r --cached . // N.B. removes all the files from git
git add .
git commit -m "fixed untracked files"

# Create new branch and checkout it
git checkout -b <branch-name>

# Fetchare tag
git fetch --all --tags

# Tag
git tag -a v1.0 -m "Version 1.0"
git push origin v1.0
git push origin --tags

# Show tags
git tag

# Checkout from tag
$ git checkout tags/v1.3.5.2 -b release/1.3.5.3


# Current HEAD
git rev-parse HEAD
git rev-parse --short HEAD

# Cambiare HEAD
git reset --hard <commit-sha>

# Remove local commit (not yet pushed) -> reset to the current head
git reset --hard origin/feature/PNXTHREE-1785-timeout-a-15-minuti


# Remove remote commit
git reset --hard <commit_desiderato>
git push --force

# Multiple commands
git --version; git branch

# Remove all local branches but develop and master
$ git for-each-ref --format '%(refname:short)' refs/heads | grep -v "master\|main\|develop" | xargs git branch -D

